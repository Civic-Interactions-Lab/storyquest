"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1540],{78457:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction : Bridging Social Gaps Through AAC and Collaborative Play","href":"/storyquest/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/storyquest/docs/requirements/system-overview","docId":"requirements/system-overview","unlisted":false},{"type":"link","label":"System Block Diagram","href":"/storyquest/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram","unlisted":false},{"type":"link","label":"General Requirements","href":"/storyquest/docs/requirements/general-requirements","docId":"requirements/general-requirements","unlisted":false},{"type":"link","label":"Features","href":"/storyquest/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements","unlisted":false},{"type":"link","label":"Use-case Descriptions","href":"/storyquest/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions","unlisted":false}],"href":"/storyquest/docs/category/requirements-specification"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/storyquest/docs/system-architecture/design","docId":"system-architecture/design","unlisted":false},{"type":"link","label":"Development Environment","href":"/storyquest/docs/system-architecture/development-environment","docId":"system-architecture/development-environment","unlisted":false},{"type":"link","label":"Version Control","href":"/storyquest/docs/system-architecture/version-control","docId":"system-architecture/version-control","unlisted":false}],"href":"/storyquest/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Backend Documentation","href":"/storyquest/docs/api-specification/backend","docId":"api-specification/backend","unlisted":false},{"type":"category","label":"Frontend Documentation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Home Page","href":"/storyquest/docs/api-specification/Frontend Documentation/homepage","docId":"api-specification/Frontend Documentation/homepage","unlisted":false},{"type":"link","label":"CreateRoomPage","href":"/storyquest/docs/api-specification/Frontend Documentation/create-room","docId":"api-specification/Frontend Documentation/create-room","unlisted":false},{"type":"link","label":"JoinRoomPage","href":"/storyquest/docs/api-specification/Frontend Documentation/join-room","docId":"api-specification/Frontend Documentation/join-room","unlisted":false},{"type":"link","label":"Gameplay Page","href":"/storyquest/docs/api-specification/Frontend Documentation/gameplay-main","docId":"api-specification/Frontend Documentation/gameplay-main","unlisted":false},{"type":"link","label":"Stories.tsx Module","href":"/storyquest/docs/api-specification/Frontend Documentation/gameplay-stories","docId":"api-specification/Frontend Documentation/gameplay-stories","unlisted":false},{"type":"link","label":"QRCodePage Component","href":"/storyquest/docs/api-specification/Frontend Documentation/qr-code","docId":"api-specification/Frontend Documentation/qr-code","unlisted":false},{"type":"link","label":"AnimatedTitle Component","href":"/storyquest/docs/api-specification/Frontend Documentation/homepage-animated-title","docId":"api-specification/Frontend Documentation/homepage-animated-title","unlisted":false},{"type":"link","label":"HomePageBackgroundMusic Component","href":"/storyquest/docs/api-specification/Frontend Documentation/homepage-bg-music","docId":"api-specification/Frontend Documentation/homepage-bg-music","unlisted":false},{"type":"link","label":"HomePageButtons Components","href":"/storyquest/docs/api-specification/Frontend Documentation/homepage-buttons","docId":"api-specification/Frontend Documentation/homepage-buttons","unlisted":false},{"type":"link","label":"CompletionPage","href":"/storyquest/docs/api-specification/Frontend Documentation/completion-page","docId":"api-specification/Frontend Documentation/completion-page","unlisted":false},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AACKeyboard Component","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/aac-keyboard","docId":"api-specification/Frontend Documentation/Components/aac-keyboard","unlisted":false},{"type":"link","label":"Camera Component (QR Code Scanning)","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/camera","docId":"api-specification/Frontend Documentation/Components/camera","unlisted":false},{"type":"link","label":"Completed Story Text-to-Speech Component","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/completed-story","docId":"api-specification/Frontend Documentation/Components/completed-story","unlisted":false},{"type":"link","label":"Text-to-Speech Component","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/text-to-speech","docId":"api-specification/Frontend Documentation/Components/text-to-speech","unlisted":false},{"type":"link","label":"TextToSpeechAACButtons Component","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/text-to-speech-aac","docId":"api-specification/Frontend Documentation/Components/text-to-speech-aac","unlisted":false},{"type":"link","label":"Hooks","href":"/storyquest/docs/api-specification/Frontend Documentation/Components/hooks","docId":"api-specification/Frontend Documentation/Components/hooks","unlisted":false}]}]}],"href":"/storyquest/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit Tests","href":"/storyquest/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration Tests","href":"/storyquest/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Acceptance Test","href":"/storyquest/docs/testing/acceptance-testing","docId":"testing/acceptance-testing","unlisted":false}],"href":"/storyquest/docs/category/test-procedures"}]},"docs":{"api-specification/backend":{"id":"api-specification/backend","title":"Backend Documentation","description":"This document describes the backend logic and Firebase Cloud Functions used in the StoryQuest application. These functions are responsible for managing game rooms, players, and the game lifecycle using Firestore.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/completion-page":{"id":"api-specification/Frontend Documentation/completion-page","title":"CompletionPage","description":"The CompletionPage component is displayed after a story is completed in the StoryQuest game. It features a celebratory screen with sound effects, animated icons, and a navigation button to return to the homepage.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/aac-keyboard":{"id":"api-specification/Frontend Documentation/Components/aac-keyboard","title":"AACKeyboard Component","description":"The AACKeyboard component renders a customizable, interactive AAC (Augmentative and Alternative Communication) keyboard with a set of buttons representing words and corresponding symbols. This component is built using React and integrates motion animations via framer-motion to enhance the user experience.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/camera":{"id":"api-specification/Frontend Documentation/Components/camera","title":"Camera Component (QR Code Scanning)","description":"Camera.tsx: This React component provides functionality for accessing the camera, scanning QR codes, and capturing images. It uses the jsQR library for QR code scanning and provides a visual interface for interacting with the camera.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/completed-story":{"id":"api-specification/Frontend Documentation/Components/completed-story","title":"Completed Story Text-to-Speech Component","description":"CompletedStory.tsx: This React component handles the reading of a completed story in a text-to-speech (TTS) format. It reads individual phrases and, once all phrases are read, switches to reading the full story. The component interacts with Firebase to update the game state once the story is fully read.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/hooks":{"id":"api-specification/Frontend Documentation/Components/hooks","title":"Hooks","description":"useButtonFeedback Hook","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/text-to-speech":{"id":"api-specification/Frontend Documentation/Components/text-to-speech","title":"Text-to-Speech Component","description":"TextToSpeechTextOnly.tsx: This React component uses the browser\'s speechSynthesis API to read a given text aloud. It handles voice selection, retries on errors, and ensures compatibility across browsers, including mobile devices.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/Components/text-to-speech-aac":{"id":"api-specification/Frontend Documentation/Components/text-to-speech-aac","title":"TextToSpeechAACButtons Component","description":"Description:","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/create-room":{"id":"api-specification/Frontend Documentation/create-room","title":"CreateRoomPage","description":"The CreateRoomPage component is a multi-step interactive UI that allows users to create a new game room. Users can select a story, specify the number of players, choose a difficulty level, and finalize their settings before generating a game room and a corresponding QR code for others to join.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/gameplay-main":{"id":"api-specification/Frontend Documentation/gameplay-main","title":"Gameplay Page","description":"The Gameplay page is the core interactive experience of the StoryQuest app. It enables multiplayer gameplay where players fill in story blanks using an AAC (Augmentative and Alternative Communication) keyboard. Players take turns to complete sentences, select images, and animate story elements while the app updates shared game state in real time using Firebase.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/gameplay-stories":{"id":"api-specification/Frontend Documentation/gameplay-stories","title":"Stories.tsx Module","description":"This module defines the stories used in the StoryQuest gameplay experience. Each story is composed of multiple sections, each containing a sentence with a blank and a list of selectable words. Each word is associated with an image, animation effect, and position, used to enhance visual storytelling and AAC interaction.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/homepage":{"id":"api-specification/Frontend Documentation/homepage","title":"Home Page","description":"The Home component serves as the main landing page for the StoryQuest application. It features the animated title, navigation buttons for creating or joining a game, and background music controls.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/homepage-animated-title":{"id":"api-specification/Frontend Documentation/homepage-animated-title","title":"AnimatedTitle Component","description":"The AnimatedTitle component renders an animated, interactive \\"StoryQuest\\" title using CSS effects and controlled animation timing. It includes a wave animation that plays after an initial load delay, followed by a smooth stop to reduce motion sickness.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/homepage-bg-music":{"id":"api-specification/Frontend Documentation/homepage-bg-music","title":"HomePageBackgroundMusic Component","description":"The HomePageBackgroundMusic component provides background music playback functionality on the homepage. It includes a music icon button that expands into audio controls for playing, stopping, and adjusting the volume.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/homepage-buttons":{"id":"api-specification/Frontend Documentation/homepage-buttons","title":"HomePageButtons Components","description":"This module defines three reusable button components used across the StoryQuest homepage and room creation/joining flows. Each button is styled with custom icons, includes auditory feedback via speech and sound effects, and is designed for accessible interaction.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/join-room":{"id":"api-specification/Frontend Documentation/join-room","title":"JoinRoomPage","description":"The JoinRoomPage component enables users to join an existing StoryQuest game session by scanning a QR code using their device camera. It provides user-friendly feedback, error handling, and a popup guide when scanning fails repeatedly.","sidebar":"docsSidebar"},"api-specification/Frontend Documentation/qr-code":{"id":"api-specification/Frontend Documentation/qr-code","title":"QRCodePage Component","description":"The QRCodePage component renders a full-screen, styled page that displays a QR code for users to join a game room. It extracts the roomId and storyTitle from the URL parameters, dynamically generates a join URL, and uses the react-qrcode-logo library to display the code. It also integrates auditory feedback for accessibility using custom hooks for text-to-speech and button click sounds.","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction : Bridging Social Gaps Through AAC and Collaborative Play","description":"Augmentative and Alternative Communication (AAC) refers to any method of communication that replaces or supports verbal speech.","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features","description":"1. AAC Keyboard","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"Frontend (Client)","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"System Block Diagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case Descriptions","description":"Use Case Sequence Diagrams","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"Design","description":"The front-end client is built with React and Next.js, while the back-end leverages Firebase for real-time database synchronization, authentication, and","sidebar":"docsSidebar"},"system-architecture/development-environment":{"id":"system-architecture/development-environment","title":"Development Environment","description":"Documentation:","sidebar":"docsSidebar"},"system-architecture/version-control":{"id":"system-architecture/version-control","title":"Version Control","description":"This project will be managed by Git and Github. We have protected our main branch meaning that every pull request needs to be reviewed and approved. Each part of the application is made in a separate branch with a relevant name that corresponds to the feature that is being made.","sidebar":"docsSidebar"},"testing/acceptance-testing":{"id":"testing/acceptance-testing","title":"Acceptance Test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration Tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit Tests","description":"(For each method, there are one or more test cases. A test case consists of input parameter values and expected results.","sidebar":"docsSidebar"}}}}')}}]);