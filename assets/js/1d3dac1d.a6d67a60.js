"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[4266],{15198:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var s=o(74848),t=o(28453);const i={sidebar_position:1},r="AACKeyboard Component",c={id:"api-specification/Frontend Documentation/Components/aac-keyboard",title:"AACKeyboard Component",description:"The AACKeyboard component renders a customizable, interactive AAC (Augmentative and Alternative Communication) keyboard with a set of buttons representing words and corresponding symbols. This component is built using React and integrates motion animations via framer-motion to enhance the user experience.",source:"@site/docs/api-specification/Frontend Documentation/Components/aac-keyboard.md",sourceDirName:"api-specification/Frontend Documentation/Components",slug:"/api-specification/Frontend Documentation/Components/aac-keyboard",permalink:"/storyquest/docs/api-specification/Frontend Documentation/Components/aac-keyboard",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Ian Applebaum",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"CompletionPage",permalink:"/storyquest/docs/api-specification/Frontend Documentation/completion-page"},next:{title:"Camera Component (QR Code Scanning)",permalink:"/storyquest/docs/api-specification/Frontend Documentation/Components/camera"}},d={},a=[{value:"Props",id:"props",level:2},{value:"Usage Example",id:"usage-example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"aackeyboard-component",children:"AACKeyboard Component"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AACKeyboard"})," component renders a customizable, interactive AAC (Augmentative and Alternative Communication) keyboard with a set of buttons representing words and corresponding symbols. This component is built using React and integrates motion animations via ",(0,s.jsx)(n.code,{children:"framer-motion"})," to enhance the user experience."]}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"onSelect"})," (required):"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Type: ",(0,s.jsx)(n.code,{children:"(word: string) => void"})]}),"\n",(0,s.jsx)(n.li,{children:"Description: A callback function that is triggered when a user selects a word. The selected word is passed as a string argument."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"symbols"})," (required):"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Type: ",(0,s.jsx)(n.code,{children:"{ word: string; image: string }[]"})]}),"\n",(0,s.jsxs)(n.li,{children:["Description: An array of objects representing the symbols on the keyboard. Each object should contain:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"word"})," (string): The word to be displayed on the button."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"image"})," (string): The URL to the image representing the symbol for that word."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"backgroundColor"})," (optional):"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"#b4fcdc"})]}),"\n",(0,s.jsx)(n.li,{children:"Description: The background color for the AAC keyboard container. Accepts any valid CSS color value."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"buttonColor"})," (optional):"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Type: ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"#63d2cb"})]}),"\n",(0,s.jsx)(n.li,{children:"Description: The background color for the individual buttons. Accepts any valid CSS color value."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"blockButtons"})," (optional):"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Type: ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"false"})]}),"\n",(0,s.jsxs)(n.li,{children:["Description: If ",(0,s.jsx)(n.code,{children:"true"}),", the buttons are visually disabled, and an overlay is shown to indicate that the buttons cannot be interacted with."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import AACKeyboard from './AACKeyboard';\n\nconst symbols = [\n  { word: 'Hello', image: '/path/to/hello.png' },\n  { word: 'Goodbye', image: '/path/to/goodbye.png' },\n  // More symbols...\n];\n\nconst handleWordSelect = (word: string) => {\n  console.log(`Selected word: ${word}`);\n};\n\n<AACKeyboard \n  onSelect={handleWordSelect} \n  symbols={symbols} \n  backgroundColor=\"#fff\" \n  buttonColor=\"#4caf50\" \n  blockButtons={false}\n/>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var s=o(96540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);