"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5456],{73522:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=s(74848),a=s(28453);const r={sidebar_position:2},i="Camera Component (QR Code Scanning)",c={id:"api-specification/Frontend Documentation/Components/camera",title:"Camera Component (QR Code Scanning)",description:"Camera.tsx: This React component provides functionality for accessing the camera, scanning QR codes, and capturing images. It uses the jsQR library for QR code scanning and provides a visual interface for interacting with the camera.",source:"@site/docs/api-specification/Frontend Documentation/Components/camera.md",sourceDirName:"api-specification/Frontend Documentation/Components",slug:"/api-specification/Frontend Documentation/Components/camera",permalink:"/storyquest/docs/api-specification/Frontend Documentation/Components/camera",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Ian Tyler Applebaum",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"AACKeyboard Component",permalink:"/storyquest/docs/api-specification/Frontend Documentation/Components/aac-keyboard"},next:{title:"Completed Story Text-to-Speech Component",permalink:"/storyquest/docs/api-specification/Frontend Documentation/Components/completed-story"}},o={},d=[{value:"Props",id:"props",level:2},{value:"<code>setHotspotImage</code>",id:"sethotspotimage",level:3},{value:"State",id:"state",level:2},{value:"Refs",id:"refs",level:2},{value:"Functions",id:"functions",level:2},{value:"<code>startCamera</code>",id:"startcamera",level:3},{value:"<code>preprocessImageData</code>",id:"preprocessimagedata",level:3},{value:"<code>captureAndScanFrame</code>",id:"captureandscanframe",level:3},{value:"<code>startContinuousScan</code>",id:"startcontinuousscan",level:3},{value:"<code>stopContinuousScan</code>",id:"stopcontinuousscan",level:3},{value:"<code>captureImage</code>",id:"captureimage",level:3},{value:"<code>useEffect</code>",id:"useeffect",level:3},{value:"UI Structure",id:"ui-structure",level:2},{value:"Camera Display",id:"camera-display",level:3},{value:"Controls",id:"controls",level:3},{value:"Example Usage",id:"example-usage",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"camera-component-qr-code-scanning",children:"Camera Component (QR Code Scanning)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Camera.tsx"}),": This React component provides functionality for accessing the camera, scanning QR codes, and capturing images. It uses the ",(0,t.jsx)(n.code,{children:"jsQR"})," library for QR code scanning and provides a visual interface for interacting with the camera."]}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.h3,{id:"sethotspotimage",children:(0,t.jsx)(n.code,{children:"setHotspotImage"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"(imageData: string) => void"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"})," A function passed as a prop to handle the captured image data (in base64 string format)."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"state",children:"State"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"stream"})})," (",(0,t.jsx)(n.code,{children:"MediaStream | null"}),"): Holds the current camera stream."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"cameraError"})})," (",(0,t.jsx)(n.code,{children:"string | null"}),"): Stores any error messages related to camera access."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"isScanning"})})," (",(0,t.jsx)(n.code,{children:"boolean"}),"): Tracks whether continuous scanning is active."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"scanIntervalRef"})})," (",(0,t.jsx)(n.code,{children:"NodeJS.Timeout | null"}),"): Holds the reference for the scanning interval."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"refs",children:"Refs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"videoRef"})})," (",(0,t.jsx)(n.code,{children:"React.RefObject<HTMLVideoElement>"}),"): A reference to the video element for displaying the camera feed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"canvasRef"})})," (",(0,t.jsx)(n.code,{children:"React.RefObject<HTMLCanvasElement>"}),"): A reference to a hidden canvas element used for QR code scanning."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"startcamera",children:(0,t.jsx)(n.code,{children:"startCamera"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Starts the camera stream by first attempting to access the back camera (",(0,t.jsx)(n.code,{children:'facingMode: "environment"'}),") and, if that fails, falls back to the front camera (",(0,t.jsx)(n.code,{children:'facingMode: "user"'}),").",(0,t.jsx)(n.br,{}),"\n","Initializes continuous scanning after a short delay."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"preprocessimagedata",children:(0,t.jsx)(n.code,{children:"preprocessImageData"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Processes the image data for better QR code recognition by adjusting the contrast and brightness of the image."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"imageData"})," (",(0,t.jsx)(n.code,{children:"ImageData"}),"): The image data to process."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ",(0,t.jsx)(n.code,{children:"ImageData"}),": The processed image data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"captureandscanframe",children:(0,t.jsx)(n.code,{children:"captureAndScanFrame"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Captures a frame from the video feed, processes it, and attempts to scan for QR codes using ",(0,t.jsx)(n.code,{children:"jsQR"}),". If a QR code is detected, it stops the scanning loop and triggers the ",(0,t.jsx)(n.code,{children:"setHotspotImage"})," callback with the captured image."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"startcontinuousscan",children:(0,t.jsx)(n.code,{children:"startContinuousScan"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Starts a continuous scan loop at an interval of 300ms, calling ",(0,t.jsx)(n.code,{children:"captureAndScanFrame"})," to scan frames continuously."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"stopcontinuousscan",children:(0,t.jsx)(n.code,{children:"stopContinuousScan"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Stops the continuous scanning loop."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"captureimage",children:(0,t.jsx)(n.code,{children:"captureImage"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Captures the current video frame and converts it to a base64 PNG image. The captured image is passed to the ",(0,t.jsx)(n.code,{children:"setHotspotImage"})," callback."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"useeffect",children:(0,t.jsx)(n.code,{children:"useEffect"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description:"}),(0,t.jsx)(n.br,{}),"\n","Initializes the camera and starts the scanning process when the component is mounted. It also cleans up by stopping the camera and scanning when the component is unmounted."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ui-structure",children:"UI Structure"}),"\n",(0,t.jsx)(n.h3,{id:"camera-display",children:"Camera Display"}),"\n",(0,t.jsxs)(n.p,{children:["The camera feed is displayed using a ",(0,t.jsx)(n.code,{children:"<video>"})," element that is rendered at full width and height, with the aspect ratio preserved. A QR code alignment guide (a green rectangle) is overlaid on the video to help users align QR codes within the camera frame. If scanning is active, the rectangle pulses in yellow."]}),"\n",(0,t.jsx)(n.h3,{id:"controls",children:"Controls"}),"\n",(0,t.jsx)(n.p,{children:"To the right of the video feed, there is a button to capture the current image from the video feed. The button is only enabled if the camera stream is active. If there is a camera error, an error message is shown with an option to retry accessing the camera."}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport Camera from './Camera';\n\nconst MyComponent: React.FC = () => {\n  const [hotspotImage, setHotspotImage] = useState<string | null>(null);\n\n  return (\n    <div>\n      <Camera setHotspotImage={setHotspotImage} />\n      {hotspotImage && (\n        <div>\n          <h2>Captured Image</h2>\n          <img src={hotspotImage} alt=\"Captured QR code\" />\n        </div>\n      )}\n    </div>\n  );\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);